##
一、分配方式
        Nginx的upstream支持5种分配方式，下面将会详细介绍，其中，前三种为Nginx原生支持的分配方式，后两种为第三方支持的分配方式：
1、轮询
        轮询是upstream的默认分配方式，即每个请求按照时间顺序轮流分配到不同的后端服务器，如果某个后端服务器down掉后，能自动剔除。
        upstream backend {
            server 192.168.1.101:8888;
            server 192.168.1.102:8888;
            server 192.168.1.103:8888;
        }
2、weight
        轮询的加强版，即可以指定轮询比率，weight和访问几率成正比，主要应用于后端服务器异质的场景下。
        upstream backend {
            server 192.168.1.101 weight=1;
            server 192.168.1.102 weight=2;
            server 192.168.1.103 weight=3;
        }
3、ip_hash
        每个请求按照访问ip（即Nginx的前置服务器或者客户端IP）的hash结果分配，这样每个访客会固定访问一个后端服务器，可以解决session一致问题。
        upstream backend {
            ip_hash;
            server 192.168.1.101:7777;
            server 192.168.1.102:8888;
            server 192.168.1.103:9999;
        }
4、fair
        fair顾名思义，公平地按照后端服务器的响应时间（rt）来分配请求，响应时间短即rt小的后端服务器优先分配请求。
        upstream backend {
            server 192.168.1.101;
            server 192.168.1.102;
            server 192.168.1.103;
            fair;
        }
5、url_hash
        与ip_hash类似，但是按照访问url的hash结果来分配请求，使得每个url定向到同一个后端服务器，主要应用于后端服务器为缓存时的场景下。
        upstream backend {
            server 192.168.1.101;
            server 192.168.1.102;
            server 192.168.1.103;
            hash $request_uri;
            hash_method crc32;
        }
        其中，hash_method为使用的hash算法，需要注意的是：此时，server语句中不能加weight等参数。
        关于，如何在负载均衡中使用upstream请参看这里。
##
----------------------------------------------------
#配置负载均衡池
upstream httpProduct_pool{#http正式服务器入口
    server 127.0.0.1:81;
}

upstream httpDebug_pool{#http测试服务器入口
    server 127.0.0.1:82;
}
upstream webSocketProduct_pool{#webSocket正式服务器入口)
    server 127.0.0.1:9991;
}

upstream webSocketDebug_pool{#webSocket测试服务器入口
    server 127.0.0.1:9992;
}

#80端口转发
server {
    listen       80;
    server_name  *.fqwang.net;
    access_log logs/book.log;
    error_log logs/book.error;
    client_header_buffer_size 16k;
    #将所有请求转发给demo_pool池的应用处理
    location / {
    	set $default http://httpProduct_pool;#默认的路由
    	proxy_set_header Host $host;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    if ($http_origin ~* "w.fqwang.net"){
	    	set $default http://httpProduct_pool;
	    }
	    if ($http_origin ~* "w-test.fqwang.net"){
	    	set $default http://httpDebug_pool;
	    }
    	proxy_pass $default;
	}
}
#9999端口转发
server {
    listen       9991;#注意这里可以listen多个端口，然后根据$remote_port来代理
    listen       9992;
    server_name  *.fqwang.net;
    access_log logs/book.log;
    error_log logs/book.error;
    client_header_buffer_size 16k;
    #将所有请求转发给demo_pool池的应用处理
    location / {
    	set $default http://webSocketProduct_pool;#默认的路由
    	proxy_set_header Host $host;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    if ($http_origin ~* "w.fqwang.net"){
	    	set $default http://webSocketProduct_pool;
	    }
	    if ($http_origin ~* "w-test.fqwang.net"){
	    	set $default http://webSocketDebug_pool;
	    }
    	proxy_pass $default;
	}
}
-------------
if后面的条件可以多种 具体可以参考 nginx 内置变量
比如
if ($http_origin ~* "w-test.fqwang.net")根据请求来源Origin
if ($http_cookie ~* "asihacker")根据请求cookies
if ($http_host = "47.88.99.106")根据请求host（$remote_addr 客户端IP地址 $remote_port 客户端的端口）
if ($http_host ~* "47.88.99.106")根据请求参数
