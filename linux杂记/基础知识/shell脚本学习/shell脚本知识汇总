汇总地址
#https://zhuanlan.zhihu.com/p/264346586?utm_source=wechat_session&utm_medium=social&utm_oi=995698089314795520
额外知识点
1.
    当运行一个.sh文件或者是shell命令，shell会把当前的环境变量都复制过来，也就是子类和父类的关系。通过以下几个场景解释这个概念。

    证明父能影响子

    直接运行命令export K=V，然后echo $K，能看到输出了V
    写一个shell脚本，echo $K，能看到输出了V
    证明子不能影响父

    在一个shell脚本中export K=V，然后echo $K，能看到输出了V。
    基于1，直接运行命令echo $K，发现输出为空
如
果想让shell脚本中执行的环境变量影响到父环境，那么可以用source来执行



shell脚本参数传递

    获取参数值：
    $0 ： 固定，代表执行的文件名
    $1 ： 代表传入的第1个参数
    $n ： 代表传入的第n个参数

    $#：参数个数
    $*： 以一个单字符串显示所有向脚本传递的参数。如"$*"用「"」括起来的情况、以"$1 $2 … $n"的形式输出所有参数
    $@：与$*相同，但是使用时加引号，并在引号中返回每个参数。
    $$：脚本运行的当前进程号
    $！：后台运行的最后一个进程的ID
    $?： 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。
    $* 与 $@ 区别
    相同点：都是引用所有参数。
    不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 " * " 等价于 "1 2 3"（传递了一个参数），而 "@" 等价于 "1" "2" "3"（传递了三个参数）。
