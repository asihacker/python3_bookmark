yum install supervisor                  //使用yum安装supervisor
systemctl enable supervisord.service    //将supervisor加入开机启动项
systemctl start supervisord.service     //启动supervisor并加载默认配置文件
---------------------
supervisorctl status        //查看所有进程的状态
supervisorctl stop es       //停止es
supervisorctl start es      //启动es
supervisorctl restart       //重启es
supervisorctl update        //配置文件修改后使用该命令加载新的配置
supervisorctl reload        //重新启动配置中的所有程序
supervisorctl shutdown      //修改主配置需要用整个命令重启才生效，比如开启web页面
supervisorctl tail/tail -f      //查看日志
--------------------
[program:xx]
command=/opt/apache-tomcat-8.0.35/bin/catalina.sh run  ; 程序启动命令
autostart=true       ; 在supervisord启动的时候也自动启动
startsecs=10         ; 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒
autorestart=true     ; 程序退出后自动重启,可选值：[unexpected,true,false]，默认为unexpected，表示进程意外杀死后才重启
startretries=3       ; 启动失败自动重试次数，默认是3
user=tomcat          ; 用哪个用户启动进程，默认是root
priority=999         ; 进程启动优先级，默认999，值小的优先启动
redirect_stderr=true ; 把stderr重定向到stdout，默认false
stdout_logfile_maxbytes=20MB  ; stdout 日志文件大小，默认50MB
stdout_logfile_backups = 20   ; stdout 日志文件备份数，默认是10
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
stdout_logfile=/opt/apache-tomcat-8.0.35/logs/catalina.out
stopasgroup=false     ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程
killasgroup=false     ;默认为false，向进程组发送kill信号，包括子进程
---------------------

nohup ./nsqlookupd >/dev/null 2>&1 &
nohup ./nsqd --lookupd-tcp-address=0.0.0.0:4160 --broadcast-address=39.100.77.40 >/dev/null 2>&1 &
nohup ./nsqadmin --lookupd-http-address=0.0.0.0:4161 >/dev/null 2>&1 &
---------------------
[program:nsq_nsqadmin]
command=/root/nsq/bin/nsqadmin --lookupd-http-address=0.0.0.0:4161 >/dev/null 2>&1 &  ; 程序启动命令
autostart=true       ; 在supervisord启动的时候也自动启动
startsecs=10         ; 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒
autorestart=true     ; 程序退出后自动重启,可选值：[unexpected,true,false]，默认为unexpected，表示进程意外杀死后才重启
startretries=3       ; 启动失败自动重试次数，默认是3
user=root          ; 用哪个用户启动进程，默认是root
priority=10         ; 进程启动优先级，默认999，值小的优先启动
redirect_stderr=true ; 把stderr重定向到stdout，默认false
stdout_logfile_maxbytes=20MB  ; stdout 日志文件大小，默认50MB
stdout_logfile_backups = 20   ; stdout 日志文件备份数，默认是10
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
stdout_logfile=/opt/apache-tomcat-8.0.35/logs/catalina.out
stopasgroup=false     ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程
killasgroup=false     ;默认为false，向进程组发送kill信号，包括子进程

[program:nsqlookupd]
command=/home/nsq-1.2.0.linux-amd64.go1.12.9/bin/nsqlookupd >/dev/null 2>&1 &  ; 程序启动命令
autostart=true       ; 在supervisord启动的时候也自动启动
startsecs=10         ; 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒
autorestart=true     ; 程序退出后自动重启,可选值：[unexpected,true,false]，默认为unexpected，表示进程意外杀死后才重启
startretries=3       ; 启动失败自动重试次数，默认是3
user=root          ; 用哪个用户启动进程，默认是root
priority=10         ; 进程启动优先级，默认999，值小的优先启动
redirect_stderr=true ; 把stderr重定向到stdout，默认false
stdout_logfile_maxbytes=20MB  ; stdout 日志文件大小，默认50MB
stdout_logfile_backups = 20   ; stdout 日志文件备份数，默认是10
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
stdout_logfile=/opt/apache-tomcat-8.0.35/logs/catalina.out
stopasgroup=false     ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程
killasgroup=false     ;默认为false，向进程组发送kill信号，包括子进程

[inet_http_server]         ; inet (TCP) server disabled by default
port=0.0.0.0:5000       ; (ip_address:port specifier, *:port for all iface)


[program:yktDev]
command=/usr/bin/python3.6 /home/ykt_ip/Dev/central_control_system/test_run.py
directory=/home/ykt_ip/Dev/central_control_system/
autorestart=true
stdout_logfile=/home/ykt_ip/Dev/central_control_system/Debug.out.log
redirect_stderr=true
user=root

[program:yktProd]
command=/usr/bin/python3.6 /home/ykt_ip/Prod/central_control_system/run.py
directory=/home/ykt_ip/Prod/central_control_system/
autorestart=true
stdout_logfile=/home/ykt_ip/Prod/central_control_system/Debug.out.log
redirect_stderr=true
user=root

[program:kafkaDev]
command=/usr/local/bin/python3 /home/ykt_mq/Dev/cloud_flask_mq/run.py
directory=/home/ykt_mq/Dev/cloud_flask_mq/
autorestart=true
stdout_logfile=/home/ykt_mq/Dev/cloud_flask_mq/Debug.out.log
redirect_stderr=true
user=root

[program:kafkaProd]
command=/usr/local/bin/python3 /home/ykt_mq/Prod/cloud_flask_mq/run.py
directory=/home/ykt_mq/Prod/cloud_flask_mq/
autorestart=true
stdout_logfile=/home/ykt_mq/Prod/cloud_flask_mq/Debug.out.log
redirect_stderr=true
user=root