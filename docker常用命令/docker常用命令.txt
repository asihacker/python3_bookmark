拉取镜像->运行容器->编辑容器->更新镜像->运行容器=更新后的容器

[模拟启动]
    docker run -d  --name 容器名 -p 本机端口:容器端口 -v $PWD/本机项目目录:/var/www/html --privileged=true 镜像ID

[启动Docker后台服务]
service docker start

[创建容器并运行]
docker run [选项] 容器名|ID [容器内执行命令]
选项:
-v:挂载目录到容器  例:docker run -d -v $PWD/file:/home 容器名|ID
    --privileged=true  授权
-d:让容器在后台运行。
-P:是容器内部端口随机映射到主机的高端口。
-p:将容器内部使用的网络端口映射到我们使用的主机上。
例:123:456,将容器的456端口映射到主机的123端口
-it:以交互模式启动一个容器
--name:容器命名

[连接到正在运行中的容器]
docker exec -it 容器名|ID /bin/bash
exit 退出容器

[查看运行中的容器]
docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES

[查看容器输出]
docker logs [选项] [容器名|ID]
选项:
-f : 监控日志输出
--since :显示某个开始时间的所有日志
-t : 显示时间戳
--tail :仅列出最新N条容器日志

[启动/停止/重启容器]
docker start/stop/restart [容器名|ID]

[查看容器端口映射]
docker port [容器名|ID]

[容器运行进程信息]
docker top [容器名|ID]

[获取容器/镜像的元数据]
docker inspect [选项] [容器名|ID]
选项:
-f :指定返回值的模板文件。
-s :显示总的文件大小。
--type :为指定类型返回JSON。

[删除容器]
docker rm [选项] [容器名|ID...]
选项:
-f :通过SIGKILL信号强制删除一个运行中的容器
-l :移除容器间的网络连接，而非容器本身
-v :-v 删除与容器关联的卷

[列出本地镜像]
docker images [选项] [容器名]
选项:
-a :列出本地所有的镜像（含中间映像层，默认情况下，过滤掉中间映像层）；
--digests :显示镜像的摘要信息；
-f :显示满足条件的镜像；
--format :指定返回值的模板文件；
--no-trunc :显示完整的镜像信息；
-q :只显示镜像ID。

[从镜像仓库中拉取或者更新指定镜像]
docker pull [选项] 镜像名[:标记]
选项:
-a :拉取所有 tagged 镜像
--disable-content-trust :忽略镜像的校验,默认开启

[查找镜像]
docker search [选项] 镜像名
选项:
--automated :只列出 automated build类型的镜像；
--no-trunc :显示完整的镜像描述；
-s :列出收藏数不小于指定值的镜像。

[删除镜像]
docker image rm 镜像名

[提交更新镜像]
docker commit [选项] 容器名 [仓库[:标签]]
选项:
-a :提交的镜像作者；
-c :使用Dockerfile指令来创建镜像；
-m :提交时的说明文字；
-p :在commit时，将容器暂停。
例:docker commit -m="提交说明" -a="作者名" 容器ID|容器名 仓库:标记
















